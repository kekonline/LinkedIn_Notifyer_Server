

  type SeenJobListing {
    jobListing: ID!   
    seen: Boolean!
    starred: Boolean!
  }

  type Token {
    value: String!
    expiry: String!    
  }

  type User {
    id: ID!
    email: String      
    password: String    
    searchTerms: [ID!]! 
    seenJobListings: [SeenJobListing!]!
    getNotifications: Boolean!
    token: Token!
    isActive: Boolean!
    createdAt: String   
    updatedAt: String   
  }

type AuthResponse {
    authToken: String
    message: String
    error: Boolean!
}

  type Response {
    message: String!
    error: Boolean!
  }

  type UserVerification {
    enrolled: Boolean!
    email: String
    getNotifications: Boolean!
    isActive: Boolean!
    message: String!
    error: Boolean!
  }

  type Query {
    verifyToken: UserVerification!
  }

  type Mutation {
    updateNotificationPreference(getNotifications: Boolean!): Response!
    sendResetPasswordEmail(email: String!): Response!
  resetPassword(email: String!, password: String!, token: String!): Response!
      resendActivationEmail: Response!
    registerUser(email: String!, password: String!): Response!
    updatePassword(oldPassword: String!, newPassword: String!): Response!
    login(email: String!, password: String!): AuthResponse!
    signUp(email: String!, password: String!): AuthResponse!
activateUser(authToken: String!): Response!
    
  }

